{"version":3,"sources":["components/LetterComponent.js","components/LeftPanel.js","components/MonthComponent.js","components/RightPanel.js","pages/Employees.js","App.js","reportWebVitals.js","index.js"],"names":["LetterComponent","block","letter","empArr","handleCheck","sortedArr","sort","a","b","lastName","className","map","emp","firstName","type","id","checked","onChange","LeftPanel","data","alphabet","split","alphabetObj","forEach","obj","firstLetter","toUpperCase","push","MonthComponent","dob","month","toLocaleString","getDate","getFullYear","RightPanel","monthObj","filter","getMonth","Array","keys","Object","length","Employees","getUsers","fetch","resp","ok","json","dataStored","JSON","parse","localStorage","getItem","q","includes","Date","setData","setLoading","setError","message","React","useState","loading","error","useEffect","e","idx","findIndex","element","target","newData","checkedIds","setItem","stringify","style","color","App","exact","path","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e150d563.chunk.js","sourcesContent":["const LetterComponent = ({ letter, empArr, handleCheck }) => {\n  let block;\n  if (!empArr) {\n    block = <span>---</span>;\n  } else {\n    const sortedArr = empArr.sort((a, b) =>\n      a.lastName > b.lastName ? 1 : b.lastName > a.lastName ? -1 : 0\n    );\n    block = (\n      <ul className=\"list\">\n        {sortedArr.map((emp) => (\n          <li key={emp.id}>\n            {emp.lastName} {emp.firstName}\n            <input\n              type=\"checkbox\"\n              id={emp.id}\n              checked={emp.checked}\n              onChange={handleCheck}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return (\n    <div className=\"center\">\n      <h4>{letter}</h4>\n      {block}\n    </div>\n  );\n};\n\nexport default LetterComponent;\n","import LetterComponent from \"./LetterComponent\";\n\nconst LeftPanel = ({ data, handleCheck }) => {\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n  let alphabetObj = {};\n  data.forEach((obj) => {\n    const firstLetter = obj.lastName[0].toUpperCase();\n    if (alphabetObj[firstLetter]) {\n      alphabetObj[firstLetter].push(obj);\n    } else {\n      alphabetObj[firstLetter] = [obj];\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"heading\">Employees</div>\n      <div className=\"wrapper\">\n        {alphabet.map((letter) => (\n          <LetterComponent\n            key={letter}\n            letter={letter}\n            empArr={alphabetObj[letter]}\n            handleCheck={handleCheck}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LeftPanel;\n","const MonthComponent = ({ empArr }) => {\n  const sortedArr = empArr.sort((a, b) =>\n    a.dob > b.dob ? 1 : b.dob > a.dob ? -1 : 0\n  );\n  const month = sortedArr[0].dob.toLocaleString(\"en-us\", { month: \"long\" });\n  return (\n    <div>\n      <h3>{month}</h3>\n      <ul>\n        {sortedArr.map((emp) => (\n          <li key={emp.id}>\n            {emp.lastName} {emp.firstName} - {emp.dob.getDate()} {month},{\" \"}\n            {emp.dob.getFullYear()} year\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MonthComponent;\n","import MonthComponent from \"./MonthComponent\";\n\nconst RightPanel = ({ data }) => {\n  let monthObj = {};\n  data\n    .filter((obj) => obj.checked)\n    .forEach((obj) => {\n      const month = obj.dob.getMonth();\n      if (monthObj[month]) {\n        monthObj[month].push(obj);\n      } else {\n        monthObj[month] = [obj];\n      }\n    });\n\n  return (\n    <div>\n      <div className=\"heading\">Employees birthday</div>\n      {[...Array(12).keys()]\n        .filter((month) => monthObj[month])\n        .map((month) => (\n          <MonthComponent key={month} empArr={monthObj[month]} />\n        ))}\n      {!Object.keys(monthObj).length && <div>No selected employees</div>}\n    </div>\n  );\n};\n\nexport default RightPanel;\n","import React from \"react\";\nimport LeftPanel from \"../components/LeftPanel\";\nimport RightPanel from \"../components/RightPanel\";\n\nconst Employees = () => {\n  const getUsers = async () => {\n    try {\n      const URL =\n        \"https://yalantis-react-school-api.yalantis.com/api/task0/users\";\n      const resp = await fetch(URL);\n      if (resp.ok) {\n        const data = await resp.json();\n        const dataStored = JSON.parse(localStorage.getItem(\"checkedIds\")) || [];\n        const q = data.map((obj) => ({\n          ...obj,\n          checked: dataStored.includes(obj.id),\n          dob: new Date(obj.dob),\n        }));\n        setData(q);\n        setLoading(false);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const [data, setData] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n\n  React.useEffect(() => {\n    getUsers();\n  }, []);\n\n  const handleCheck = (e) => {\n    const idx = data.findIndex((element) => element.id === e.target.id);\n    let newData = [...data];\n    newData[idx] = { ...newData[idx], checked: e.target.checked };\n    setData(newData);\n    const checkedIds = newData\n      .filter((emp) => emp.checked)\n      .map((emp) => emp.id);\n    localStorage.setItem(\"checkedIds\", JSON.stringify(checkedIds));\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"left\">\n        {loading ? (\n          \"Loading...\"\n        ) : (\n          <LeftPanel data={data} handleCheck={handleCheck} />\n        )}\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n      </div>\n      <div className=\"right\">\n        <RightPanel data={data} />\n      </div>\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Employees from \"./pages/Employees\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/employees\" />\n        </Route>\n        <Route exact path=\"/employees\" component={Employees} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}